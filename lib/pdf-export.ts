import jsPDF from "jspdf"
import autoTable, { RowInput } from "jspdf-autotable";

// Monkey patch so TS recognizes lastAutoTable
declare module "jspdf" {
  interface jsPDF {
    lastAutoTable?: {
      finalY: number;
    };
  }
}

export function generateESGPdfReport(brand: string, metrics: any, breakdown: any[], compliance: any[]) {
  const doc = new jsPDF()

  // --- Title ---
  doc.setFontSize(18)
  doc.text(`${brand} ESG Performance Report`, 14, 20)
  doc.setFontSize(11)
  doc.setTextColor(100)

  doc.text("Generated by FMCG Analytics Platform", 14, 28)

  // --- Section: Executive Summary ---
  doc.setFontSize(14)
  doc.setTextColor(40)
  doc.text("Executive Summary", 14, 40)

  doc.setFontSize(11)
  doc.setTextColor(60)
  doc.text(
    `This report provides an overview of ${brand}'s environmental, social, and governance (ESG) 
performance based on packaging material analysis and brand detection data.`,
    14,
    48,
    { maxWidth: 180 }
  )

  // --- Section: Key Metrics ---
  doc.setFontSize(14)
  doc.setTextColor(40)
  doc.text("Key Metrics", 14, 70)

  autoTable(doc, {
    startY: 75,
    head: [["Metric", "Value"]],
    body: [
      ["Recyclable Materials", `${metrics.recyclablePercentage.toFixed(1)}%`],
      ["Carbon Footprint Score", `${metrics.carbonFootprint.toFixed(1)}/100`],
      ["Sustainability Score", `${metrics.sustainabilityScore.toFixed(1)}/100`],
      ["Material Efficiency", `${metrics.materialEfficiency.toFixed(1)}%`],
      ["Waste Reduction", `${metrics.wasteReduction.toFixed(1)}%`],
    ],
  })


  // --- Section: Material Breakdown ---
  doc.setFontSize(14)
  doc.setTextColor(40)
  doc.text("Material Breakdown", 14, doc.lastAutoTable.finalY + 20)

  autoTable(doc, {
    startY: doc.lastAutoTable.finalY + 25,
    head: [["Material", "Percentage"]],
    body: breakdown.map((b) => [b.material, `${b.percentage}%`]),
  })

  // --- Section: Compliance ---
  doc.setFontSize(14)
  doc.setTextColor(40)
  doc.text("Compliance Status", 14, doc.lastAutoTable.finalY + 20)

  autoTable(doc, {
    startY: doc.lastAutoTable.finalY + 25,
    head: [["Requirement", "Status"]],
    body: compliance.map((c) => [c.name, c.status]),
  })

  // Footer
  doc.setFontSize(10)
  doc.setTextColor(150)
  doc.text("Â© 2025 FMCG Analytics Platform", 14, 290)

  return doc
}
